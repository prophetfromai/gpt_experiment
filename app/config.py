"""
This module contains configuration settings for the FastAPI application.

It includes functions and variables that modify the default behavior of the OpenAPI
documentation or any other custom configurations for the application.
"""

# Import necessary modules from the standard library
import os  # os module is used to read environment variables from the operating system.

def custom_openapi(app):
    """
    Returns a custom OpenAPI schema generation function for the provided FastAPI app.
    This function modifies the default OpenAPI schema to include custom server URL and descriptions.
    """

    # Store the original OpenAPI method
    original_openapi = app.openapi
    # This variable keeps a reference to the original `openapi` method of the FastAPI app,
    # which generates the default OpenAPI schema.

    def openapi():
        # This nested function modifies the FastAPI application's autogenerated OpenAPI schema.
        if app.openapi_schema:
            # If a custom OpenAPI schema is already set, return it to avoid regenerating it.
            return app.openapi_schema

        # Generate the default OpenAPI schema using the original method
        openapi_schema = original_openapi().copy()
        # This line calls the original OpenAPI function of FastAPI and makes a copy of the result.
        # Making a copy is important to avoid modifying the original schema directly.

        # Retrieve the server URL from the environment variable
        server_url = os.getenv(
            "BASE_URL",
            "http://localhost:8080")  # Default to local URL if not set
        # This line gets the server URL from an environment variable called BASE_URL,
        # defaulting to "http://localhost:8080" if the variable isn't set.

        # Add a custom server object to the OpenAPI schema
        openapi_schema["servers"] = [{
            "url": server_url,
            "description": "Production server" if "run.app" in server_url else "Local server"
        }]
        # This block modifies the `servers` section of the OpenAPI schema to include the retrieved server URL.
        # It also sets a description based on whether the URL includes "run.app", distinguishing between
        # production and local environments.

        # Store the modified schema in the FastAPI app instance
        app.openapi_schema = openapi_schema
        # This assigns the modified OpenAPI schema back to the app instance, caching it for future requests.

        return app.openapi_schema
        # Return the modified OpenAPI schema.

    return openapi
    # The function `custom_openapi` returns `openapi`, which can be set as the app's OpenAPI schema generator.
